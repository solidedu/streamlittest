AWSTemplateFormatVersion: '2010-09-09'
Description: Template to deploy AWS Bedrock knowledge base and Lambda functions for API operations

Parameters:
  DocumentS3Key:
    Type: String
    Description: S3 key for the documents to ingest
  LambdaLayerS3BucketName:
    Type: String
    Description: The S3 bucket storing the Lambda layer code
  LambdaLayerS3Key:
    Type: String
    Description: The S3 key for the Lambda layer zip file
  KnowledgeBaseBucketName:
    Type: String
    Description: The name of the existing S3 bucket for the Knowledge Base
  LambdaFunctionS3BucketName:
    Type: String
    Description: The S3 bucket storing the Lambda function code
  LambdaFunctionS3Key:
    Type: String
    Description: The S3 key for the Lambda function zip file

Resources:
  # IAM Role for Bedrock Execution
  BedrockExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: bedrock.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AmazonBedrockFoundationModelPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - bedrock:InvokeModel
                Resource: !Sub 'arn:aws:bedrock:${AWS::Region}::foundation-model/amazon.titan-embed-text-v1'
        - PolicyName: AmazonBedrockS3Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                Resource:
                  - !Sub 'arn:aws:s3:::${KnowledgeBaseBucketName}'
                  - !Sub 'arn:aws:s3:::${KnowledgeBaseBucketName}/*'
                Condition:
                  StringEquals:
                    aws:ResourceAccount: !Sub '${AWS::AccountId}'

  # IAM Role for Lambda Functions
  LambdaExecutionRoleForKnowledgeBase:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: KnowledgeBaseExecutionPermissions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - bedrock:InvokeModel
                  - bedrock:Retrieve
                  - bedrock:RetrieveAndGenerate
                  - s3:GetObject
                  - s3:ListBucket
                Resource: '*'

  # Lambda Layer for Knowledge Base
  DeployKnowledgeBaseLambdaLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      LayerName: KnowledgeBaseLambdaLayer
      Description: Knowledge Base Lambda Layer
      Content:
        S3Bucket: !Ref LambdaLayerS3BucketName
        S3Key: !Ref LambdaLayerS3Key
      CompatibleRuntimes:
        - python3.12
        - python3.11
        - python3.10

  # Lambda Function to Create Knowledge Base
  CreateKnowledgeBaseLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: CreateKnowledgeBase
      Code:
        S3Bucket: !Ref LambdaFunctionS3BucketName
        S3Key: !Ref LambdaFunctionS3Key
      Handler: index.lambda_handler
      Role: !GetAtt LambdaExecutionRoleForKnowledgeBase.Arn
      Runtime: python3.12
      Timeout: 300

  # Custom Resource to Create Knowledge Base
  KnowledgeBase:
    Type: Custom::Resource
    Properties:
      ServiceToken: !GetAtt CreateKnowledgeBaseLambda.Arn

  # Lambda Function for Knowledge Base Operations
  DeployKnowledgeBaseLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: InvokeKnowledgeBase
      Code:
        S3Bucket: !Ref LambdaFunctionS3BucketName
        S3Key: !Ref LambdaFunctionS3Key
      Handler: index.lambda_handler
      MemorySize: 256
      Role: !GetAtt LambdaExecutionRoleForKnowledgeBase.Arn
      Runtime: python3.12
      Timeout: 60
      Layers: 
        - !Ref DeployKnowledgeBaseLambdaLayer
      Environment:
        Variables:
          KNOWLEDGE_BASE_ID: !GetAtt KnowledgeBase.PhysicalResourceId

Outputs:
  BedrockExecutionRoleArn:
    Description: ARN of the Bedrock Execution Role
    Value: !GetAtt BedrockExecutionRole.Arn
  InvokeKnowledgeBaseLambdaArn:
    Description: ARN of the InvokeKnowledgeBase Lambda Function
    Value: !GetAtt DeployKnowledgeBaseLambda.Arn
  CreateKnowledgeBaseLambdaArn:
    Description: ARN of the CreateKnowledgeBase Lambda Function
    Value: !GetAtt CreateKnowledgeBaseLambda.Arn
  KnowledgeBaseID:
    Description: ID of the created Knowledge Base
    Value: !GetAtt KnowledgeBase.PhysicalResourceId
